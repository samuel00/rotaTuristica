package com.example.rotaturistica;

import java.util.ArrayList;

import org.w3c.dom.Document;

import com.example.utils.GMapV2Direction;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;
import com.google.android.gms.maps.model.PolylineOptions;

import android.content.Intent;
import android.graphics.Color;
import android.location.Location;
import android.location.LocationListener;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.util.Log;

public class Mapa extends FragmentActivity implements LocationListener{


	private static final LatLng VOCE = new LatLng(-1.44856,-48.499771);
	private LatLng destination;
	private GoogleMap map;

	protected void onCreate(Bundle savedInstanceState) {
		
		
		
		super.onCreate(savedInstanceState);
		setContentView(R.layout.mapa);
		SupportMapFragment mapFrag = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);
		map = mapFrag.getMap();
		map.setMapType(GoogleMap.MAP_TYPE_NORMAL);
		
		

		Intent intent = getIntent();
		
		double latitude = intent.getDoubleExtra("latitude", 0);
		double longitude = intent.getDoubleExtra("longitude", 0);
		
		Log.w("", "Mapa latitude " + latitude + " longitude " + longitude);

		destination = new LatLng(latitude,longitude);

		map.animateCamera(CameraUpdateFactory.zoomTo(10), 2000, null);

		GMapV2Direction md = new GMapV2Direction();

		Document doc = md.getDocument(VOCE, destination, GMapV2Direction.MODE_DRIVING);

		ArrayList<LatLng> directionPoint = md.getDirection(doc);

		PolylineOptions rectLine = new PolylineOptions().width(3).color(Color.BLUE);

		for(int i = 0 ; i < directionPoint.size() ; i++) {          
			rectLine.add(directionPoint.get(i));
		}

		map.addPolyline(rectLine);

	}
	
	private String getMapsApiDirectionsUrl() {
		String waypoints = "waypoints=optimize:true|"
				+ VOCE.latitude + "," + VOCE.longitude
				+ "|" + "|" + destination.latitude + ","
				+ destination.longitude;

		String sensor = "sensor=false";
		String mode = "mode=driving";
		String params = waypoints + "&" + sensor + "&" + mode;
		String output = "json";
		String url = "https://maps.googleapis.com/maps/api/directions/"
				+ output + "?" + params;
		return url;
	}

	private void addMarkers() {
		if (map != null) {
			map.addMarker(new MarkerOptions().position(VOCE)
					.title("Mercado de São Brás"));
			map.addMarker(new MarkerOptions().position(destination)
					.title("Bragança"));
		}
	}

	@Override
	public void onLocationChanged(Location location) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onStatusChanged(String provider, int status, Bundle extras) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onProviderEnabled(String provider) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onProviderDisabled(String provider) {
		// TODO Auto-generated method stub

	}

}
