package com.example.rotaturistica;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONObject;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.ListActivity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.ViewFlipper;

@SuppressLint("NewApi")
public class DetalhesActivity extends FragmentActivity {

	private TextView descricaoText;
	ImageView imageView;
	private long id;
	String [] imagens;
	private ViewFlipper viewFlipper;
	@SuppressLint("NewApi")
	protected void onCreate(Bundle savedInstanceState) {

		super.onCreate(savedInstanceState);
		setContentView(R.layout.detalhes);

		Intent intent = getIntent();
		String descricao = intent.getStringExtra("descricao");
		String atracaoNome = intent.getStringExtra("nome");
		this.id = intent.getLongExtra("idItem",0);
		getActionBar().setTitle(atracaoNome +" - Detalhes");

		descricaoText =(TextView) findViewById(R.id.descricao);
		imageView = (ImageView) findViewById(R.id.atracaoImage);

		descricaoText.setText(descricao);

		new MultimidiaTask().execute();
		

	}

	public void verNoMapa(View view){
		if(view.getId() == R.id.mapaButton){

			Intent intent = getIntent();
			long idServico = intent.getLongExtra("idItem",0);
			long idTipoServico = intent.getLongExtra("idTipo", 0);
			double latitude = intent.getDoubleExtra("latitude", 0);
			double longitude = intent.getDoubleExtra("longitude", 0);
			String atracaoNome = intent.getStringExtra("nome");
			int icone = intent.getIntExtra("icone", 0);

			Intent intent2 = new Intent(this, Mapa.class);
			intent2.putExtra("idItem",idServico);
			intent2.putExtra("latitude",latitude);
			intent2.putExtra("longitude",longitude);
			intent2.putExtra("idTipo", idTipoServico);
			intent2.putExtra("nome", atracaoNome);
			intent2.putExtra("icone", icone);
			startActivity(intent2);
		}

	}

	private class MultimidiaTask extends AsyncTask<String, Void, String[]>{

		@Override
		protected String[] doInBackground(String... params) {
			String multimidiaJson = multimidiaJson(id);
			String [] url;
			try {
				JSONObject multimidiaObject = new JSONObject(multimidiaJson);
				multimidiaObject = new JSONObject(multimidiaObject.getString("multimidia"));
				JSONArray jsonArraylistaDeMultimidia = new JSONArray(multimidiaObject.getString("listaDeMultimidia"));
				multimidiaObject = jsonArraylistaDeMultimidia.getJSONObject(0);
				if(!multimidiaObject.getString("multimidia").startsWith("[")){
					JSONObject multimidia = new JSONObject(multimidiaObject.getString("multimidia"));
					url = new String[1];
					url[0] = multimidia.getString("url");
				}else{
					jsonArraylistaDeMultimidia = new JSONArray(multimidiaObject.getString("multimidia"));
					url = new String[jsonArraylistaDeMultimidia.length()];
					for(int j =0; j < jsonArraylistaDeMultimidia.length(); j++){
						JSONObject jsonObject5 = jsonArraylistaDeMultimidia.getJSONObject(j);
						String multimidia = jsonObject5.getString("url");
						url[j] = multimidia;
					}

				}
				return url;

			}catch (Exception e) {
				Log.w(JsonActivity.class.getName(), "Deu erro");
				e.printStackTrace();
			}
			return null;
		}
		
		@Override
		protected void onPostExecute(String[] result) {
			viewFlipper = (ViewFlipper) findViewById(R.id.flipper);
			for(int i=0;i<result.length;i++){
				
				Log.w("","URL - " + result[i]);
				int resId = getResources().getIdentifier(result[i] , "drawable", getPackageName());
				Log.w("","URL - " + resId);
	            setFlipperImage(resId);
	        }
			
			viewFlipper.showNext();
		}

		private void setFlipperImage(int resId) {
			ImageView image = new ImageView(DetalhesActivity.this);
		    image.setBackgroundResource(resId);
		    viewFlipper.addView(image);
		}

		private String multimidiaJson(long id) {
			StringBuilder builder = new StringBuilder();
			HttpClient client = new DefaultHttpClient();
			HttpGet httpGet = new HttpGet("http://10.0.2.2:8282/WSRotaTuristica/multimidias/"+id);
			try {
				HttpResponse response = client.execute(httpGet);
				StatusLine statusLine = response.getStatusLine();
				int statusCode = statusLine.getStatusCode();
				if (statusCode == 200) {
					HttpEntity entity = response.getEntity();
					InputStream content = entity.getContent();
					BufferedReader reader = new BufferedReader(new InputStreamReader(content));
					String line;
					while ((line = reader.readLine()) != null) {
						builder.append(line);
					}
				} else {
					Log.e(JsonActivity.class.toString(), "Failed to download file");
				}
			} catch (ClientProtocolException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return builder.toString();
		}
	}
}